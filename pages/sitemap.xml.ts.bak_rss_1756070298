import type { GetServerSideProps } from 'next'

/**
 * Serve sitemap.xml as XML via SSR to avoid static prerender crashes.
 * If you later generate dynamic URLs, extend the <urlset> here.
 */
export const getServerSideProps: GetServerSideProps = async ({ res }) => {
  const base = process.env.NEXT_PUBLIC_SITE_URL || 'https://f1-grandstand.vercel.app'
  const now = new Date().toISOString()

  const xml =
`<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>${base}/</loc>
    <lastmod>${now}</lastmod>
    <changefreq>hourly</changefreq>
    <priority>1.0</priority>
  </url>
  <url>
    <loc>${base}/videos</loc>
    <lastmod>${now}</lastmod>
    <changefreq>hourly</changefreq>
    <priority>0.9</priority>
  </url>
  <url>
    <loc>${base}/about</loc>
    <lastmod>${now}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.6</priority>
  </url>
  <url>
    <loc>/news</loc>
    <lastmod></lastmod>
    <changefreq>hourly</changefreq>
    <priority>0.8</priority>
  </url>
  <url>
    <loc>/privacy</loc>
    <lastmod></lastmod>
    <changefreq>yearly</changefreq>
    <priority>0.3</priority>
  </url>
  <url>
    <loc>/videos/page/1</loc>
    <lastmod></lastmod>
    <changefreq>hourly</changefreq>
    <priority>0.8</priority>
  </url>
  <url>
    <loc>/videos/page/2</loc>
    <lastmod></lastmod>
    <changefreq>hourly</changefreq>
    <priority>0.7</priority>
  </url>
  <url>
    <loc>/videos.xml</loc>
    <changefreq>hourly</changefreq>
    <priority>0.3</priority>
  </url>
  <url>
    <loc>${base}/videos.xml</loc>
    <changefreq>hourly</changefreq>
    <priority>0.3</priority>
  </url>
</urlset>
`

  res.setHeader('Content-Type', 'application/xml; charset=utf-8')
  res.write(xml)
  res.end()
  return { props: {} }
}

// This component never renders; response is written in getServerSideProps.
export default function Sitemap() { return null }
